kind: ConfigMap
apiVersion: v1
metadata:
  name: kube-prometheus-stack-grafana
  namespace: monitoring
  selfLink: /api/v1/namespaces/monitoring/configmaps/kube-prometheus-stack-grafana
  labels:
    app.kubernetes.io/instance: kube-prometheus-stack
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 7.2.1
    helm.sh/chart: grafana-5.8.16
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"v1","data":{"grafana.ini":"[analytics]\ncheck_for_updates =
      true\n[grafana_net]\nurl = https://grafana.net\n[log]\nmode =
      console\n[paths]\ndata = /var/lib/grafana/data\nlogs =
      /var/log/grafana\nplugins = /var/lib/grafana/plugins\nprovisioning =
      /etc/grafana/provisioning\n[security]\nallow_embedding =
      true\n[smtp]\nenabled = true\nhost = smtp.gmail.com:587\nuser =
      grafana.krysp@gmail.com\n# If the password contains # or ; you have to
      wrap it with triple quotes. Ex \"\"\"#password;\"\"\"\npassword =
      \"\"\"Krysp@123\"\"\"\n;cert_file = \n;key_file = \nskip_verify =
      true\nfrom_address = grafana.krysp@gmail.com\nfrom_name =
      Grafana\n"},"kind":"ConfigMap","metadata":{"annotations":{"meta.helm.sh/release-name":"kube-prometheus-stack","meta.helm.sh/release-namespace":"monitoring"},"creationTimestamp":"2020-12-08T09:34:13Z","labels":{"app.kubernetes.io/instance":"kube-prometheus-stack","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"7.2.1","helm.sh/chart":"grafana-5.8.16"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:grafana.ini":{}},"f:metadata":{"f:annotations":{".":{},"f:meta.helm.sh/release-name":{},"f:meta.helm.sh/release-namespace":{}},"f:labels":{".":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/managed-by":{},"f:app.kubernetes.io/name":{},"f:app.kubernetes.io/version":{},"f:helm.sh/chart":{}}}},"manager":"Go-http-client","operation":"Update","time":"2020-12-08T09:34:13Z"}],"name":"kube-prometheus-stack-grafana","namespace":"monitoring","selfLink":"/api/v1/namespaces/monitoring/configmaps/kube-prometheus-stack-grafana","uid":"0c82d864-6156-4884-8f01-bbff608443aa"}}
    meta.helm.sh/release-name: kube-prometheus-stack
    meta.helm.sh/release-namespace: monitoring
  managedFields:
    - manager: Go-http-client
      operation: Update
      apiVersion: v1
      time: '2020-12-08T09:34:13Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:grafana.ini': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:meta.helm.sh/release-name': {}
            'f:meta.helm.sh/release-namespace': {}
          'f:labels':
            .: {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/managed-by': {}
            'f:app.kubernetes.io/name': {}
            'f:app.kubernetes.io/version': {}
            'f:helm.sh/chart': {}
data:
  grafana.ini: >
    [analytics]

    check_for_updates = true

    [grafana_net]

    url = https://grafana.net

    [log]

    mode = console

    [paths]

    data = /var/lib/grafana/data

    logs = /var/log/grafana

    plugins = /var/lib/grafana/plugins

    provisioning = /etc/grafana/provisioning

    [security]

    allow_embedding = true

    [smtp]

    enabled = true

    host = smtp.gmail.com:587

    user = grafana.krysp@gmail.com

    # If the password contains # or ; you have to wrap it with triple quotes. Ex
    """#password;"""

    password = """Krysp@123"""

    ;cert_file = 

    ;key_file = 

    skip_verify = true

    from_address = grafana.krysp@gmail.com

    from_name = Grafana